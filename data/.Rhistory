View(P_kml)
P_kml[[1]]
p1<-polygon(P_kml)
pontos_gps<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
library(maptools)
library(rgeos)
library(raster)
baixio_total <- getKMLcoordinates(kmlfile="Perigo2.kml", ignoreAltitude=T)
area_grid<- getKMLcoordinates(kmlfile="MalhaPerigo.kml", ignoreAltitude=T)
#pontos do gps
pontos_gps<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
pontos$Lat<-as.double(pontos$Lat)
View(pontos_gps)
View(pontos_gps)
pontos_gps<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
pontos_gps$Lat<-as.double(pontos_gps$Lat)
pontos_gps$Long<-as.double(pontos_gps$Long)
pontos_gps
plot(pontos_gps$Lat~pontos_gps$Long)
malha_amostral<-spsample(area_grid, 2000, type=regular)
malha_amostral<-spsample(area_grid, 2000, type=regular)
grid_poly<-kml_to_sp(area_grid)
install.packages("rWBclimate")
library(rWBclimate)
grid_poly<-kml_to_sp(area_grid)
grid_poly<-kml_to_sp(area_grid, crs_string = "+proj=longlat +datum=WGS84")
mapview(area_grid)
install.packages("mapview")
library(mapview)
mapview(area_grid)
grid_polygon_1<-Polygon(area_grid, ID="drivetime")
grid_polygon_1<-Polygon(area_grid)
mapview(grid_polygon_1)
grid_polygon_2<-Polygons(grid_polygon_1, iD="drivetime")
grid_polygon_2<-Polygons(list(grid_polygon_1), iD="drivetime")
grid_polygon_2<-Polygons(list(grid_polygon_1), ID="drivetime")
mapview(grid_polygon_2)
grid_polygon<-SpatialPolygons(list(grid_polygon_2), proj4string=CRS("+proj=longlat +datum=WGS84"))
mapview(grid_polygon)
baixio_polygon<-SpatialPolygons(list(baixio2), proj4string=CRS("+proj=longlat +datum=WGS84"))
baixio1<- Polygon(baixio_total)
baixio2<-Polygons(list(baixio1), ID="drivetime")
baixio_polygon<-SpatialPolygons(list(baixio2), proj4string=CRS("+proj=longlat +datum=WGS84"))
mapview(grid_polygon + baixio_polygon)
mapView(grid_polygon)
mapView(grid_polygon, baixio_polygon)
mapView(baixio_polygon)
mapview(grid_polygon)
mapView(baixio_polygon)
mapView(grid_polygon + baixio_polygon)
malha_amostral<-spsample(grid_polygon, 2000, type=regular)
malha_amostral<-spsample(grid_polygon, 2000, type="regular")
View(malha_amostral)
malha amostral
malha_amostral
plot(malha_amostral)
plot(grid_polygon)
poits(malha_amostral)
points(malha_amostral)
plot(grid_polygon)
points(malha_amostral)
plot(grid_polygon)
points(malha_amostral)
malha_amostral<-spsample(grid_polygon, 2000, type="regular")
plot(grid_polygon)
points(malha_amostral)
plot(malha_amostral)
plot(grid_polygon)
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
points(pontos)
malha<-raster(coordinates(malha_amostral))
plot(malha)
plot(grid_polygon)
points(malha)
malha[]<-1:ncel(malha)
malha[]<-1:ncell(malha)
plot(grid_polygon)
points(malha)
plot(malha)
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
plot(malha_amostral)
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
mapview(malha_amostral)
points(pontos_gps)
mapview(pontos)
mapview(pontos_gps)
View(pontos_gps)
mapview(xcol=pontos_gps$Long, ycol=pontos_gps$Lat)
coordinates(pontos_gps)<-~pontos_gps$Long+pontos_gps$Lat
coordinates(pontos_gps)<-~x+y
coordinates(pontos_gps)<-~pontos_gps$Lat+pontos_gps$Long
pontos_gps<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
pontos_gps$Lat<-as.double(pontos_gps$Lat)
pontos_gps$Long<-as.double(pontos_gps$Long)
pontos_gps
coordinates(pontos_gps)<-~pontos_gps$Lat+pontos_gps$Long
coordinates(pontos_gps)<-~Lat+Long
SpatialPoints(pontos_gps)
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
abril21<-sample(malha_amostral,20)
abril21
mapview(abril21)
View(abril21)
abril21
View(pontos_gps)
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
abril21$Long<-as.double(abril21$Long)
abril21
coordinates(abril21)<-~Lat+Long
abril21
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
abril21
coordinates(abril21)<-~Lat+Long
SpatialPoints(abril21)
mapBaixio
mapBaixio<-mapview(baixio_polygon)
mapAbril21<-mapview(abril21)
mapBaixio+mapGrid
mapGrid<-mapview(grid_polygon)
mapBaixio<-mapview(baixio_polygon)
mapMalha<-mapview(malha_amostral)
mapSelecao<-mapview(selecao)
## Selecionar 20 pontos aleatórios dentre aqueles da área amostral
## cada vez, rodado, o comando selecionará aleatóriamente 20 pontos.
##
selecao<-sample(malha_amostral,20)
selecao
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
abril21
SpatialPoints(abril21)
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
abril21
coordinates(abril21)<-~Lat+Long
SpatialPoints(abril21)
mapBaixio<-mapview(baixio_polygon)
mapGrid<-mapview(grid_polygon)
mapMalha<-mapview(malha_amostral)
mapSelecao<-mapview(selecao)
mapAbril21<-mapview(abril21)
mapBaixio
mapBaixio+mapGrid
mapBaixio+mapGrid+mapMalha
mapBaixio+mapGrid+mapMalha+mapAbril21
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(maptools)
library(rgeos)
library(raster)
library(rWBclimate)
library(mapview)
baixio_total <- getKMLcoordinates(kmlfile="Perigo2.kml", ignoreAltitude=T)
baixio1<- Polygon(baixio_total)
baixio2<-Polygons(list(baixio1), ID="drivetime")
baixio_polygon<-SpatialPolygons(list(baixio2), proj4string=CRS("+proj=longlat +datum=WGS84"))
area_grid<- getKMLcoordinates(kmlfile="MalhaPerigo.kml", ignoreAltitude=T)
grid_polygon_1<-Polygon(area_grid)
grid_polygon_2<-Polygons(list(grid_polygon_1), ID="drivetime")
grid_polygon<-SpatialPolygons(list(grid_polygon_2), proj4string=CRS("+proj=longlat +datum=WGS84"))
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
## Selecionar 20 pontos aleatórios dentre aqueles da área amostral
## cada vez, rodado, o comando selecionará aleatóriamente 20 pontos.
##
selecao<-sample(malha_amostral,20)
selecao
#pontos do gps
## Esses pontos foram selecionados a partir do gps, mas igualmente sera aqueles atrelados ao objeto seleçao.
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
abril21
coordinates(abril21)<-~Lat+Long
SpatialPoints(abril21)
mapBaixio<-mapview(baixio_polygon)
mapGrid<-mapview(grid_polygon)
mapMalha<-mapview(malha_amostral)
mapSelecao<-mapview(selecao)
mapAbril21<-mapview(abril21)
mapBaixio
mapBaixio<-mapview(baixio_polygon, fill=NA)
mapBaixio<-mapview(baixio_polygon, fill="")
mapBaixio<-mapview(baixio_polygon)
mapGrid<-mapview(grid_polygon)
mapBaixio + mapGrid
mapBaixio + mapGrid + mapAbril21
mapAbril21<-mapview(abril21, col="red")
mapBaixio + mapGrid + mapAbril21
mapBaixio + mapGrid + mapAbril21 + mapSelecao
mapSelecao<-mapview(selecao, colour="red")
mapSelecao<-mapview(selecao, colour="red")
mapBaixio + mapGrid + mapAbril21 + mapSelecao
mapBaixio + mapGrid + mapAbril21 + mapSelecao
s<-ggplot() +
geom_polygon(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
coord_sf()
knitr::opts_chunk$set(fig.path='figure/graphics-',
cache.path='cache/graphics-',
fig.align='center',
external=TRUE,
echo=TRUE,
warning=FALSE,
fig.pos='H'
)
pacman:: p_load(gstat,raster,sp, rgeos, mapview, maptools, sf, ggplot2, ggmap, kableExtra)
baixio_total <- getKMLcoordinates(kmlfile="Perigo2.kml", ignoreAltitude=T)
baixio1<- Polygon(baixio_total)
baixio2<-Polygons(list(baixio1), ID="drivetime")
baixio_polygon<-SpatialPolygons(list(baixio2), proj4string=CRS("+proj=longlat +datum=WGS84"))
area_grid<- getKMLcoordinates(kmlfile="MalhaPerigo.kml", ignoreAltitude=T)
grid_polygon_1<-Polygon(area_grid)
grid_polygon_2<-Polygons(list(grid_polygon_1), ID="drivetime")
grid_polygon<-SpatialPolygons(list(grid_polygon_2), proj4string=CRS("+proj=longlat +datum=WGS84"))
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
## Selecionar 20 pontos aleatórios dentre aqueles da área amostral
## cada vez, rodado, o comando selecionará aleatóriamente 20 pontos.
##
selecao<-sample(malha_amostral,20)
selecao
#pontos do gps
## Esses pontos foram selecionados a partir do gps, mas igualmente sera aqueles atrelados ao objeto seleçao.
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
tabela<-abril21
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
coordinates(abril21)<-~Lat+Long
SpatialPoints(abril21)
mapBaixio<-mapview(baixio_polygon)
mapGrid<-mapview(grid_polygon)
mapMalha<-mapview(malha_amostral)
mapSelecao<-mapview(selecao)
mapAbril21<-mapview(abril21)
#mapBaixio + mapGrid + mapAbril21 + mapSelecao
c <- ggplot(tabela) +
geom_sf(mapping = aes(x=Long, y=Lat))
c
c <- ggplot(tabela) +
GeomPoint(mapping = aes(x=Long, y=Lat))
c <- ggplot(tabela) +
geom_point(mapping = aes(x=Long, y=Lat))
c
c <- ggplot(abril21) +
geom_point(mapping = aes(x=Long, y=Lat))
rlang::last_error()
tlang::last_trace()
rlang::last_trace()
names(tabela)<-c("Ponto","Long","Lat", "Subquadrate 1","Subquadrate 2", "Subquadrate 3", "Subquadrate 4", "Cobertura total (100m²)")
kable(tabela, "latex",longtable = T,linesep = "", booktabs = T,escape=F, caption =" Pontos coordenadas geograficas e cobertura de agregados de Holodule wrigthii (m²)")%>%
kable_styling(latex_options = c("repeat_header"))
knitr::opts_chunk$set(fig.path='figure/graphics-',
cache.path='cache/graphics-',
fig.align='center',
external=TRUE,
echo=TRUE,
warning=FALSE,
fig.pos='H'
)
pacman:: p_load(rgdal,gstat,raster,sp,sf, ggspatial, rgeos, mapview, mapdata, maptools,  tidyverse, ggmap, kableExtra, ggforce, cowplot)
costa<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "continente")
mangue<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "manguezais")
baixios<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "baixios")
costa<-st_as_sf(costa)
mangue<-st_as_sf(mangue)
baixios<- st_as_sf(baixios)
costa
x<- ggplot() +
geom_sf(data = costa, mapping = aes(fill = "grey", alpha=0.01), show.legend = FALSE) +
#geom_sf(data = mangue, mapping = aes(fill = "green", alpha=0.01), show.legend = FALSE)+
#geom_sf(data = baixios, mapping = aes(fill = "orange", alpha=0.01), show.legend = FALSE)+
coord_sf(xlim=c(730000, 780000), ylim=c(7160000, 7210000))+
labs(y="Lat", x = "Long")
x
BP = raster::raster(malha, res = 0.0010) #  "res" sets pixel resolution
BPr = raster::rasterize(malha, BP, 0)
knitr::opts_chunk$set(fig.path='figure/graphics-',
cache.path='cache/graphics-',
fig.align='center',
external=TRUE,
echo=TRUE,
warning=FALSE,
fig.pos='H'
)
pacman:: p_load(rgdal,gstat,raster,sp,sf, ggspatial, rgeos, mapview, mapdata, maptools,  tidyverse, ggmap, kableExtra, ggforce, cowplot)
costa<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "continente")
mangue<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "manguezais")
baixios<-readOGR(dsn="~/Documentos/GEOPROCESSAMENTO/mapa", layer = "baixios")
costa<-st_as_sf(costa)
mangue<-st_as_sf(mangue)
baixios<- st_as_sf(baixios)
costa
x<- ggplot() +
geom_sf(data = costa, mapping = aes(fill = "grey", alpha=0.01), show.legend = FALSE) +
#geom_sf(data = mangue, mapping = aes(fill = "green", alpha=0.01), show.legend = FALSE)+
#geom_sf(data = baixios, mapping = aes(fill = "orange", alpha=0.01), show.legend = FALSE)+
coord_sf(xlim=c(730000, 780000), ylim=c(7160000, 7210000))+
labs(y="Lat", x = "Long")
x
baixio = sf:: st_as_sf(baixio_polygon)
malha = sf:: st_as_sf(grid_polygon)
p<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
#geom_point(data=tabela,  aes(x = as.numeric(Long),
#             y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
x0=756683.13
y0=7180098.29
y<-x + geom_point(aes(x=x0, y=y0, size=10, alpha=0.4), show.legend = FALSE)+
theme_void()
plot_grid(y, p, labels = c("(A)", "(B)"), rel_widths = c(1, 2))
s<- ggplot() +
#geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
geom_point(data=tabela,  aes(x = as.numeric(Long),
y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
s
s<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
geom_point(data=tabela,  aes(x = as.numeric(Long),
y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
s
names(tabela)<-c("Ponto","Long","Lat", "Subquadrate 1","Subquadrate 2", "Subquadrate 3", "Subquadrate 4", "Cobertura total (100m²)")
kable(tabela, "latex",longtable = T,linesep = "", booktabs = T,escape=F, caption =" Pontos coordenadas geograficas e cobertura de agregados de Holodule wrigthii (m²)")%>%
kable_styling(latex_options = c("repeat_header"))
###PAREI AKI
names(tabela)<-c("Ponto","Long","Lat", "Sub1","Sub2", "Sub3", "Sub4", "cobertura_total")
q <- ggplot() +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
geom_point(data=tabela,  aes(x = as.numeric(Long), y = as.numeric(Lat), size=(cobertura_total), colour=(cobertura_total))) +
labs(y="Lat", x = "Long")+
scale_colour_continuous(low = "black", high = "green", name="Cobertura total")+
scale_size_continuous(name="")+
coord_sf()
q
BP = raster::raster(malha, res = 0.0010) #  "res" sets pixel resolution
BPr = raster::rasterize(malha, BP, 0)
gridBP = as(BPr, "SpatialPixelsDataFrame")
sp::plot(BP)
sp::plot(BPr)
sp::plot(gridBP)
View(pontos)
View(pontos)
eval.idw = data.frame(expand.grid (k = c(seq (0.5, 4, by = 0.5)),
me_train = NA,
mae_train = NA,
rmse_train = NA,
ave_train = NA,
r2_train= NA))
View(eval.idw)
View(tabela)
mapa = idw(cobertura_total ~ 1, tabela, gridBP, idp = 2)
mapa = idw(cobertura_total ~ 1, tabela, gridBP, idp = 2)
mapa = idw(tabela$cobertura_total ~ 1, tabela, gridBP, idp = 2)
knitr::opts_chunk$set(fig.path='figure/graphics-',
cache.path='cache/graphics-',
fig.align='center',
external=TRUE,
echo=TRUE,
warning=FALSE,
fig.pos='H'
)
pacman:: p_load(rgdal,gstat,raster,sp,sf, ggspatial, rgeos, mapview, mapdata, maptools,  tidyverse, ggmap, kableExtra, ggforce, cowplot)
baixio_total <- getKMLcoordinates(kmlfile="Perigo2.kml", ignoreAltitude=T)
baixio1<- Polygon(baixio_total)
baixio2<-Polygons(list(baixio1), ID="drivetime")
baixio_polygon<-SpatialPolygons(list(baixio2), proj4string=CRS("+proj=longlat +datum=WGS84"))
area_grid<- getKMLcoordinates(kmlfile="MalhaPerigo.kml", ignoreAltitude=T)
grid_polygon_1<-Polygon(area_grid)
grid_polygon_2<-Polygons(list(grid_polygon_1), ID="drivetime")
grid_polygon<-SpatialPolygons(list(grid_polygon_2), proj4string=CRS("+proj=longlat +datum=WGS84"))
malha_amostral<-spsample(grid_polygon, 1948, type="regular")
## Selecionar 20 pontos aleatórios dentre aqueles da área amostral
## cada vez, rodado, o comando selecionará aleatóriamente 20 pontos.
##
selecao<-sample(malha_amostral,20)
selecao
#pontos do gps
## Esses pontos foram selecionados a partir do gps, mas igualmente sera aqueles atrelados ao objeto seleçao.
abril21<-read.csv2("gramineas_pontos.csv", h=T, sep=",")
tabela<-abril21
names(tabela)
abril21$Lat<-as.double(abril21$Lat)
abril21$Long<-as.double(abril21$Long)
coordinates(abril21)<-~Lat+Long
SpatialPoints(abril21)
mapBaixio<-mapview(baixio_polygon)
mapGrid<-mapview(grid_polygon)
mapMalha<-mapview(malha_amostral)
mapSelecao<-mapview(selecao)
mapAbril21<-mapview(abril21)
#mapBaixio + mapGrid + mapAbril21 + mapSelecao
baixio = sf:: st_as_sf(baixio_polygon)
malha = sf:: st_as_sf(grid_polygon)
p<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
#geom_point(data=tabela,  aes(x = as.numeric(Long),
#             y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
x0=756683.13
y0=7180098.29
y<-x + geom_point(aes(x=x0, y=y0, size=10, alpha=0.4), show.legend = FALSE)+
theme_void()
baixio = sf:: st_as_sf(baixio_polygon)
malha = sf:: st_as_sf(grid_polygon)
p<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
#geom_point(data=tabela,  aes(x = as.numeric(Long),
#             y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
x0=756683.13
y0=7180098.29
y<-x + geom_point(aes(x=x0, y=y0, size=10, alpha=0.4), show.legend = FALSE)+
theme_void()
plot_grid(y, p, labels = c("(A)", "(B)"), rel_widths = c(1, 2))
y<-p + geom_point(aes(x=x0, y=y0, size=10, alpha=0.4), show.legend = FALSE)+
theme_void()
plot_grid(y, p, labels = c("(A)", "(B)"), rel_widths = c(1, 2))
p<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
geom_point(data=tabela,  aes(x = as.numeric(Long),
y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
p<- ggplot() +
geom_sf(data = baixio, mapping = aes(fill = "NA", alpha=0.01), show.legend = FALSE) +
geom_sf(data = malha, mapping = aes(fill = "NA", alpha=0.5),show.legend = FALSE) +
geom_point(data=tabela,  aes(x = as.numeric(Long),
y = as.numeric(Lat), alpha = .7, ), show.legend = F)+
labs(y="Lat", x = "Long")+
coord_sf()
x0=756683.13
y0=7180098.29
y<-p + geom_point(aes(x=x0, y=y0, size=10, alpha=0.4), show.legend = FALSE)+
theme_void()
plot_grid(y, p, labels = c("(A)", "(B)"), rel_widths = c(1, 2))
library(Rpath)
setwd("~/Documentos/GitHub/ParanaguaBay_FoodWeb/data")
BasicInput <- read.csv("PEC Annual-Basic input.csv", h=T)
Diet<- read.csv("PEC Annual-Diet composition.csv")
Fleet<-read.csv("PEC Annual-Definition of fleets.csv")
Discards<-read.csv("PEC Annual-Discards.csv")
Landings<-read.csv("PEC Annual-Landings.csv")
#Create groups name vector from Basic Input data
group_name<-c(BasicInput$Group.name, Fleet$Fleet.name)
Type<-c(rep(0,35), rep(1,3), 2, rep(3,5)) #
#Create Rpath object
PecModel<-create.rpath.params(group_name, Type, stgroup = NA)
#Fill basic
{
PecModel$model$Biomass<-c(BasicInput$Biomass.in.habitat.area..t.km.., rep("NA", 5))
PecModel$model$PB<-c(BasicInput$Production...biomass...year., rep("NA", 5))
PecModel$model$QB<-c(BasicInput$Consumption...biomass...year., rep("NA", 5))
PecModel$model$EE<-c(BasicInput$Ecotrophic.Efficiency,  rep("NA", 5))
PecModel$model$ProdCons<-c(BasicInput$Production...consumption, rep("NA", 5))
PecModel$model$Unassim<-c(BasicInput$Unassim..consumption,rep("NA", 5))
PecModel$model$DetInput<-c(BasicInput$Detritus.import..t.km..year.,rep("NA", 5))
}
#Fishery data
# Landings and Discards comes from EwE with Sum in last line - REMOVE
#Landings. The suffix ".l" = landings
{
Landings<-Landings[1:39,]
Discards<-Discards[1:39,]
mussel.l<-c(Landings$Mussel.extraction..t.km..year.,rep("NA", 5))
trap.l<-c(Landings$Estuarine.Trap..t.km..year.,rep("NA", 5))
shrimp.l<-c(Landings$Estuarine.Shrimp.Fishery..t.km..year.,rep("NA", 5))
gillnet.l<-c(Landings$Gillnet..t.km..year.,rep("NA", 5))
longline.l<-c(Landings$Longline..t.km..year.,rep("NA", 5))
#Discards. Suffix .d = discards
mussel.d<-c(Discards$Mussel.extraction..t.km..year., rep("NA", 5))
trap.d<-c(Discards$Estuarine.Trap..t.km..year., rep("NA", 5))
shrimp.d<-c(Discards$Estuarine.Shrimp.Fishery..t.km..year., rep("NA", 5))
gillnet.d<-c(Discards$Gillnet..t.km..year., rep("NA", 5))
longline.d<-c(Discards$Longline..t.km..year., rep("NA", 5))
}
# insert landings data from five fisheries in PecModel (rpath object)
PecModel$model[,MusselExtraction := mussel.l]
PecModel$model[,EstuarineTrap := trap.l]
PecModel$model[,EstuarineShrimp := shrimp.l]
PecModel$model[,Gillnet := gillnet.l]
PecModel$model[,Longline := longline.l]
# insert discards data from five fisheries into PecModel (rpath object)
PecModel$model[,MusselExtraction.disc := mussel.d]
PecModel$model[,EstuarineTrap.disc := trap.d]
PecModel$model[,EstuarineShrimp.disc := shrimp.d]
PecModel$model[,Gillnet.disc := gillnet.d]
PecModel$model[,Longline.disc := longline.d]
pec<-PecModel # so para nao ter q fica rodando o modelo toda hora no ajuste da dieta
tail(Diet, 10)
tail(pec$diet, 10)
#Remove last two lines (Sum , and (1-Sum));the first and the detritus and primary production columns (X.1). The data from EwE comes like this
dieta<-Diet[1:40,2:37] # remove partes idesejadas da matriz de dieta proveniente do Ewe.
names(dieta)<-c("Group",t(dieta$Prey...predator[1:35])) # arruma o nome da matriz de dieta
diet
View(diet)
pec$diet=dieta
View(pec$diet)
